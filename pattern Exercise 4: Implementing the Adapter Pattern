interface PaymentProcessor {
    void processPayment(double amount);
}

class ThirdPartyPaymentGateway1 {
    public void makePayment(double amount) {
        System.out.println("Payment of $" + amount + " processed by Gateway 1");
    }
}

class ThirdPartyPaymentGateway2 {
    public void pay(double amount) {
        System.out.println("Payment of $" + amount + " processed by Gateway 2");
    }
}

class PaymentAdapter1 implements PaymentProcessor {
    private ThirdPartyPaymentGateway1 gateway;

    public PaymentAdapter1(ThirdPartyPaymentGateway1 gateway) {
        this.gateway = gateway;
    }

    public void processPayment(double amount) {
        gateway.makePayment(amount);
    }
}

class PaymentAdapter2 implements PaymentProcessor {
    private ThirdPartyPaymentGateway2 gateway;

    public PaymentAdapter2(ThirdPartyPaymentGateway2 gateway) {
        this.gateway = gateway;
    }

    public void processPayment(double amount) {
        gateway.pay(amount);
    }
}

public class AdapterPatternExample {
    public static void main(String[] args) {
        PaymentProcessor processor1 = new PaymentAdapter1(new ThirdPartyPaymentGateway1());
        PaymentProcessor processor2 = new PaymentAdapter2(new ThirdPartyPaymentGateway2());

        processor1.processPayment(100.0);
        processor2.processPayment(200.0);
    }
}
